"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/error";
exports.ids = ["vendor-chunks/error"];
exports.modules = {

/***/ "(action-browser)/./node_modules/error/typed.js":
/*!*************************************!*\
  !*** ./node_modules/error/typed.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar template = __webpack_require__(/*! string-template */ \"(action-browser)/./node_modules/string-template/index.js\");\nvar extend = __webpack_require__(/*! xtend/mutable */ \"(action-browser)/./node_modules/xtend/mutable.js\");\nvar assert = __webpack_require__(/*! assert */ \"assert\");\n\nvar isWordBoundary = /[_.-](\\w|$)/g;\n\nmodule.exports = TypedError;\n\nfunction TypedError(args) {\n    assert(args, 'TypedError: must specify options');\n    assert(args.type, 'TypedError: must specify options.type');\n    assert(args.message, 'TypedError: must specify options.message');\n\n    assert(!has(args, 'fullType'),\n        'TypedError: fullType field is reserved');\n\n    var message = args.message;\n    if (args.type && !args.name) {\n        var errorName = camelCase(args.type) + 'Error';\n        args.name = errorName[0].toUpperCase() + errorName.substr(1);\n    }\n\n    extend(createError, args);\n    createError._name = args.name;\n\n    return createError;\n\n    function createError(opts) {\n        var result = new Error();\n\n        Object.defineProperty(result, 'type', {\n            value: result.type,\n            enumerable: true,\n            writable: true,\n            configurable: true\n        });\n\n        var options = extend({}, args, opts);\n        if (!options.fullType) {\n            options.fullType = options.type;\n        }\n\n        extend(result, options);\n        if (opts && opts.message) {\n            result.message = template(opts.message, options);\n        } else if (message) {\n            result.message = template(message, options);\n        }\n\n        return result;\n    }\n}\n\nfunction camelCase(str) {\n    return str.replace(isWordBoundary, upperCase);\n}\n\nfunction upperCase(_, x) {\n    return x.toUpperCase();\n}\n\nfunction has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9lcnJvci90eXBlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixlQUFlLG1CQUFPLENBQUMsaUZBQWlCO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyx1RUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsc0JBQVE7O0FBRTdCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxyZXBvXFxOdXRyaVdpc2VBSVxcbm9kZV9tb2R1bGVzXFxlcnJvclxcdHlwZWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdGVtcGxhdGUgPSByZXF1aXJlKCdzdHJpbmctdGVtcGxhdGUnKTtcbnZhciBleHRlbmQgPSByZXF1aXJlKCd4dGVuZC9tdXRhYmxlJyk7XG52YXIgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5cbnZhciBpc1dvcmRCb3VuZGFyeSA9IC9bXy4tXShcXHd8JCkvZztcblxubW9kdWxlLmV4cG9ydHMgPSBUeXBlZEVycm9yO1xuXG5mdW5jdGlvbiBUeXBlZEVycm9yKGFyZ3MpIHtcbiAgICBhc3NlcnQoYXJncywgJ1R5cGVkRXJyb3I6IG11c3Qgc3BlY2lmeSBvcHRpb25zJyk7XG4gICAgYXNzZXJ0KGFyZ3MudHlwZSwgJ1R5cGVkRXJyb3I6IG11c3Qgc3BlY2lmeSBvcHRpb25zLnR5cGUnKTtcbiAgICBhc3NlcnQoYXJncy5tZXNzYWdlLCAnVHlwZWRFcnJvcjogbXVzdCBzcGVjaWZ5IG9wdGlvbnMubWVzc2FnZScpO1xuXG4gICAgYXNzZXJ0KCFoYXMoYXJncywgJ2Z1bGxUeXBlJyksXG4gICAgICAgICdUeXBlZEVycm9yOiBmdWxsVHlwZSBmaWVsZCBpcyByZXNlcnZlZCcpO1xuXG4gICAgdmFyIG1lc3NhZ2UgPSBhcmdzLm1lc3NhZ2U7XG4gICAgaWYgKGFyZ3MudHlwZSAmJiAhYXJncy5uYW1lKSB7XG4gICAgICAgIHZhciBlcnJvck5hbWUgPSBjYW1lbENhc2UoYXJncy50eXBlKSArICdFcnJvcic7XG4gICAgICAgIGFyZ3MubmFtZSA9IGVycm9yTmFtZVswXS50b1VwcGVyQ2FzZSgpICsgZXJyb3JOYW1lLnN1YnN0cigxKTtcbiAgICB9XG5cbiAgICBleHRlbmQoY3JlYXRlRXJyb3IsIGFyZ3MpO1xuICAgIGNyZWF0ZUVycm9yLl9uYW1lID0gYXJncy5uYW1lO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUVycm9yO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlRXJyb3Iob3B0cykge1xuICAgICAgICB2YXIgcmVzdWx0ID0gbmV3IEVycm9yKCk7XG5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlc3VsdCwgJ3R5cGUnLCB7XG4gICAgICAgICAgICB2YWx1ZTogcmVzdWx0LnR5cGUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIG9wdGlvbnMgPSBleHRlbmQoe30sIGFyZ3MsIG9wdHMpO1xuICAgICAgICBpZiAoIW9wdGlvbnMuZnVsbFR5cGUpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuZnVsbFR5cGUgPSBvcHRpb25zLnR5cGU7XG4gICAgICAgIH1cblxuICAgICAgICBleHRlbmQocmVzdWx0LCBvcHRpb25zKTtcbiAgICAgICAgaWYgKG9wdHMgJiYgb3B0cy5tZXNzYWdlKSB7XG4gICAgICAgICAgICByZXN1bHQubWVzc2FnZSA9IHRlbXBsYXRlKG9wdHMubWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIH0gZWxzZSBpZiAobWVzc2FnZSkge1xuICAgICAgICAgICAgcmVzdWx0Lm1lc3NhZ2UgPSB0ZW1wbGF0ZShtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBjYW1lbENhc2Uoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKGlzV29yZEJvdW5kYXJ5LCB1cHBlckNhc2UpO1xufVxuXG5mdW5jdGlvbiB1cHBlckNhc2UoXywgeCkge1xuICAgIHJldHVybiB4LnRvVXBwZXJDYXNlKCk7XG59XG5cbmZ1bmN0aW9uIGhhcyhvYmosIGtleSkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/error/typed.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/error/wrapped.js":
/*!***************************************!*\
  !*** ./node_modules/error/wrapped.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar extend = __webpack_require__(/*! xtend/mutable */ \"(action-browser)/./node_modules/xtend/mutable.js\");\nvar assert = __webpack_require__(/*! assert */ \"assert\");\n\nvar TypedError = __webpack_require__(/*! ./typed.js */ \"(action-browser)/./node_modules/error/typed.js\");\n\nvar objectToString = Object.prototype.toString;\nvar ERROR_TYPE = '[object Error]';\nvar causeMessageRegex = /\\{causeMessage\\}/g;\nvar origMessageRegex = /\\{origMessage\\}/g;\n\nmodule.exports = WrappedError;\n\nfunction WrappedError(options) {\n    assert(options, 'WrappedError: must specify options');\n    assert(options.type, 'WrappedError: must specify type');\n    assert(options.message, 'WrappedError: must specify message');\n\n    assert(!has(options, 'cause'),\n        'WrappedError: cause field is reserved');\n    assert(!has(options, 'fullType'),\n        'WrappedError: fullType field is reserved');\n    assert(!has(options, 'causeMessage'),\n        'WrappedError: causeMessage field is reserved');\n    assert(!has(options, 'origMessage'),\n        'WrappedError: origMessage field is reserved');\n\n    var createTypedError = TypedError(options);\n    extend(createError, options);\n    createError._name = options.name;\n\n    return createError;\n\n    function createError(cause, opts) {\n        /*eslint max-statements: [2, 25]*/\n        assert(cause, 'an error is required');\n        assert(isError(cause),\n            'WrappedError: first argument must be an error');\n\n        var causeMessage = cause.message;\n        if (causeMessage.indexOf('{causeMessage}') >= 0) {\n            // recover\n            causeMessage = causeMessage.replace(\n                causeMessageRegex,\n                '$INVALID_CAUSE_MESSAGE_LITERAL'\n            );\n        }\n        if (causeMessage.indexOf('{origMessage}') >= 0) {\n            causeMessage = causeMessage.replace(\n                origMessageRegex,\n                '$INVALID_ORIG_MESSAGE_LITERAL'\n            );\n        }\n\n        var nodeCause = false;\n        var errOptions = extend({}, opts, {\n            causeMessage: causeMessage,\n            origMessage: causeMessage\n        });\n\n        if (has(cause, 'code') && !has(errOptions, 'code')) {\n            errOptions.code = cause.code;\n        }\n\n        if (has(cause, 'errno') && !has(errOptions, 'errno')) {\n            errOptions.errno = cause.errno;\n            nodeCause = true;\n        }\n\n        if (has(cause, 'syscall') && !has(errOptions, 'syscall')) {\n            errOptions.syscall = cause.syscall;\n            nodeCause = true;\n        }\n\n        var causeType = cause.type;\n        if (!causeType && nodeCause) {\n            causeType = 'error.wrapped-io.' +\n                (cause.syscall || 'unknown') + '.' +\n                (cause.errno || 'unknown');\n        } else {\n            causeType = 'error.wrapped-unknown';\n        }\n\n        errOptions.fullType = options.type + '~!~' +\n            (cause.fullType || cause.type || causeType);\n\n        var err = createTypedError(errOptions);\n\n        Object.defineProperty(err, 'cause', {\n            value: cause,\n            configurable: true,\n            enumerable: false\n        });\n        return err;\n    }\n}\n\nfunction has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction isError(err) {\n    return objectToString.call(err) === ERROR_TYPE;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9lcnJvci93cmFwcGVkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQyx1RUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsc0JBQVE7O0FBRTdCLGlCQUFpQixtQkFBTyxDQUFDLGtFQUFZOztBQUVyQztBQUNBO0FBQ0EsMkJBQTJCLGNBQWM7QUFDekMsMEJBQTBCLGFBQWE7O0FBRXZDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsYUFBYTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsWUFBWTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXHJlcG9cXE51dHJpV2lzZUFJXFxub2RlX21vZHVsZXNcXGVycm9yXFx3cmFwcGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGV4dGVuZCA9IHJlcXVpcmUoJ3h0ZW5kL211dGFibGUnKTtcbnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcblxudmFyIFR5cGVkRXJyb3IgPSByZXF1aXJlKCcuL3R5cGVkLmpzJyk7XG5cbnZhciBvYmplY3RUb1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgRVJST1JfVFlQRSA9ICdbb2JqZWN0IEVycm9yXSc7XG52YXIgY2F1c2VNZXNzYWdlUmVnZXggPSAvXFx7Y2F1c2VNZXNzYWdlXFx9L2c7XG52YXIgb3JpZ01lc3NhZ2VSZWdleCA9IC9cXHtvcmlnTWVzc2FnZVxcfS9nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdyYXBwZWRFcnJvcjtcblxuZnVuY3Rpb24gV3JhcHBlZEVycm9yKG9wdGlvbnMpIHtcbiAgICBhc3NlcnQob3B0aW9ucywgJ1dyYXBwZWRFcnJvcjogbXVzdCBzcGVjaWZ5IG9wdGlvbnMnKTtcbiAgICBhc3NlcnQob3B0aW9ucy50eXBlLCAnV3JhcHBlZEVycm9yOiBtdXN0IHNwZWNpZnkgdHlwZScpO1xuICAgIGFzc2VydChvcHRpb25zLm1lc3NhZ2UsICdXcmFwcGVkRXJyb3I6IG11c3Qgc3BlY2lmeSBtZXNzYWdlJyk7XG5cbiAgICBhc3NlcnQoIWhhcyhvcHRpb25zLCAnY2F1c2UnKSxcbiAgICAgICAgJ1dyYXBwZWRFcnJvcjogY2F1c2UgZmllbGQgaXMgcmVzZXJ2ZWQnKTtcbiAgICBhc3NlcnQoIWhhcyhvcHRpb25zLCAnZnVsbFR5cGUnKSxcbiAgICAgICAgJ1dyYXBwZWRFcnJvcjogZnVsbFR5cGUgZmllbGQgaXMgcmVzZXJ2ZWQnKTtcbiAgICBhc3NlcnQoIWhhcyhvcHRpb25zLCAnY2F1c2VNZXNzYWdlJyksXG4gICAgICAgICdXcmFwcGVkRXJyb3I6IGNhdXNlTWVzc2FnZSBmaWVsZCBpcyByZXNlcnZlZCcpO1xuICAgIGFzc2VydCghaGFzKG9wdGlvbnMsICdvcmlnTWVzc2FnZScpLFxuICAgICAgICAnV3JhcHBlZEVycm9yOiBvcmlnTWVzc2FnZSBmaWVsZCBpcyByZXNlcnZlZCcpO1xuXG4gICAgdmFyIGNyZWF0ZVR5cGVkRXJyb3IgPSBUeXBlZEVycm9yKG9wdGlvbnMpO1xuICAgIGV4dGVuZChjcmVhdGVFcnJvciwgb3B0aW9ucyk7XG4gICAgY3JlYXRlRXJyb3IuX25hbWUgPSBvcHRpb25zLm5hbWU7XG5cbiAgICByZXR1cm4gY3JlYXRlRXJyb3I7XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVFcnJvcihjYXVzZSwgb3B0cykge1xuICAgICAgICAvKmVzbGludCBtYXgtc3RhdGVtZW50czogWzIsIDI1XSovXG4gICAgICAgIGFzc2VydChjYXVzZSwgJ2FuIGVycm9yIGlzIHJlcXVpcmVkJyk7XG4gICAgICAgIGFzc2VydChpc0Vycm9yKGNhdXNlKSxcbiAgICAgICAgICAgICdXcmFwcGVkRXJyb3I6IGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYW4gZXJyb3InKTtcblxuICAgICAgICB2YXIgY2F1c2VNZXNzYWdlID0gY2F1c2UubWVzc2FnZTtcbiAgICAgICAgaWYgKGNhdXNlTWVzc2FnZS5pbmRleE9mKCd7Y2F1c2VNZXNzYWdlfScpID49IDApIHtcbiAgICAgICAgICAgIC8vIHJlY292ZXJcbiAgICAgICAgICAgIGNhdXNlTWVzc2FnZSA9IGNhdXNlTWVzc2FnZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAgIGNhdXNlTWVzc2FnZVJlZ2V4LFxuICAgICAgICAgICAgICAgICckSU5WQUxJRF9DQVVTRV9NRVNTQUdFX0xJVEVSQUwnXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjYXVzZU1lc3NhZ2UuaW5kZXhPZigne29yaWdNZXNzYWdlfScpID49IDApIHtcbiAgICAgICAgICAgIGNhdXNlTWVzc2FnZSA9IGNhdXNlTWVzc2FnZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAgIG9yaWdNZXNzYWdlUmVnZXgsXG4gICAgICAgICAgICAgICAgJyRJTlZBTElEX09SSUdfTUVTU0FHRV9MSVRFUkFMJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBub2RlQ2F1c2UgPSBmYWxzZTtcbiAgICAgICAgdmFyIGVyck9wdGlvbnMgPSBleHRlbmQoe30sIG9wdHMsIHtcbiAgICAgICAgICAgIGNhdXNlTWVzc2FnZTogY2F1c2VNZXNzYWdlLFxuICAgICAgICAgICAgb3JpZ01lc3NhZ2U6IGNhdXNlTWVzc2FnZVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoaGFzKGNhdXNlLCAnY29kZScpICYmICFoYXMoZXJyT3B0aW9ucywgJ2NvZGUnKSkge1xuICAgICAgICAgICAgZXJyT3B0aW9ucy5jb2RlID0gY2F1c2UuY29kZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChoYXMoY2F1c2UsICdlcnJubycpICYmICFoYXMoZXJyT3B0aW9ucywgJ2Vycm5vJykpIHtcbiAgICAgICAgICAgIGVyck9wdGlvbnMuZXJybm8gPSBjYXVzZS5lcnJubztcbiAgICAgICAgICAgIG5vZGVDYXVzZSA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGFzKGNhdXNlLCAnc3lzY2FsbCcpICYmICFoYXMoZXJyT3B0aW9ucywgJ3N5c2NhbGwnKSkge1xuICAgICAgICAgICAgZXJyT3B0aW9ucy5zeXNjYWxsID0gY2F1c2Uuc3lzY2FsbDtcbiAgICAgICAgICAgIG5vZGVDYXVzZSA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgY2F1c2VUeXBlID0gY2F1c2UudHlwZTtcbiAgICAgICAgaWYgKCFjYXVzZVR5cGUgJiYgbm9kZUNhdXNlKSB7XG4gICAgICAgICAgICBjYXVzZVR5cGUgPSAnZXJyb3Iud3JhcHBlZC1pby4nICtcbiAgICAgICAgICAgICAgICAoY2F1c2Uuc3lzY2FsbCB8fCAndW5rbm93bicpICsgJy4nICtcbiAgICAgICAgICAgICAgICAoY2F1c2UuZXJybm8gfHwgJ3Vua25vd24nKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhdXNlVHlwZSA9ICdlcnJvci53cmFwcGVkLXVua25vd24nO1xuICAgICAgICB9XG5cbiAgICAgICAgZXJyT3B0aW9ucy5mdWxsVHlwZSA9IG9wdGlvbnMudHlwZSArICd+IX4nICtcbiAgICAgICAgICAgIChjYXVzZS5mdWxsVHlwZSB8fCBjYXVzZS50eXBlIHx8IGNhdXNlVHlwZSk7XG5cbiAgICAgICAgdmFyIGVyciA9IGNyZWF0ZVR5cGVkRXJyb3IoZXJyT3B0aW9ucyk7XG5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVyciwgJ2NhdXNlJywge1xuICAgICAgICAgICAgdmFsdWU6IGNhdXNlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBoYXMob2JqLCBrZXkpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KTtcbn1cblxuZnVuY3Rpb24gaXNFcnJvcihlcnIpIHtcbiAgICByZXR1cm4gb2JqZWN0VG9TdHJpbmcuY2FsbChlcnIpID09PSBFUlJPUl9UWVBFO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/error/wrapped.js\n");

/***/ })

};
;