"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jaeger-client";
exports.ids = ["vendor-chunks/jaeger-client"];
exports.modules = {

/***/ "(action-browser)/./node_modules/jaeger-client/dist/src/logger.js":
/*!*******************************************************!*\
  !*** ./node_modules/jaeger-client/dist/src/logger.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar NullLogger = function () {\n  function NullLogger() {\n    _classCallCheck(this, NullLogger);\n  }\n\n  _createClass(NullLogger, [{\n    key: \"info\",\n    value: function info(msg) {}\n  }, {\n    key: \"error\",\n    value: function error(msg) {}\n  }]);\n\n  return NullLogger;\n}();\n\nexports[\"default\"] = NullLogger;\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qYWVnZXItY2xpZW50L2Rpc3Qvc3JjL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7O0FBRUYsaUNBQWlDLDJDQUEyQyxnQkFBZ0Isa0JBQWtCLE9BQU8sMkJBQTJCLHdEQUF3RCxnQ0FBZ0MsdURBQXVELCtEQUErRCx5REFBeUQscUVBQXFFLDZEQUE2RCx3QkFBd0I7O0FBRWpqQixrREFBa0QsMENBQTBDOztBQUU1RjtBQUNBO0FBQ0EsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRCxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJDOlxccmVwb1xcTnV0cmlXaXNlQUlcXG5vZGVfbW9kdWxlc1xcamFlZ2VyLWNsaWVudFxcZGlzdFxcc3JjXFxsb2dnZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8vIENvcHlyaWdodCAoYykgMjAxNiBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0XG4vLyBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2Vcbi8vIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzXG4vLyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyXG4vLyB0aGUgTGljZW5zZS5cblxudmFyIE51bGxMb2dnZXIgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIE51bGxMb2dnZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE51bGxMb2dnZXIpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE51bGxMb2dnZXIsIFt7XG4gICAga2V5OiBcImluZm9cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5mbyhtc2cpIHt9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXJyb3JcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXJyb3IobXNnKSB7fVxuICB9XSk7XG5cbiAgcmV0dXJuIE51bGxMb2dnZXI7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IE51bGxMb2dnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/jaeger-client/dist/src/logger.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/jaeger-client/dist/src/reporters/http_sender.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jaeger-client/dist/src/reporters/http_sender.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _http = __webpack_require__(/*! http */ \"http\");\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _https = __webpack_require__(/*! https */ \"https\");\n\nvar _https2 = _interopRequireDefault(_https);\n\nvar _path = __webpack_require__(/*! path */ \"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _url = __webpack_require__(/*! url */ \"url\");\n\nvar URL = _interopRequireWildcard(_url);\n\nvar _thriftrw = __webpack_require__(/*! thriftrw */ \"(action-browser)/./node_modules/thriftrw/index.js\");\n\nvar _logger = __webpack_require__(/*! ../logger.js */ \"(action-browser)/./node_modules/jaeger-client/dist/src/logger.js\");\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _sender_utils = __webpack_require__(/*! ./sender_utils.js */ \"(action-browser)/./node_modules/jaeger-client/dist/src/reporters/sender_utils.js\");\n\nvar _sender_utils2 = _interopRequireDefault(_sender_utils);\n\nvar _thrift = __webpack_require__(/*! ../thrift.js */ \"(action-browser)/./node_modules/jaeger-client/dist/src/thrift.js\");\n\nvar _thrift2 = _interopRequireDefault(_thrift);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_PATH = '/api/traces';\nvar DEFAULT_PORT = 14268;\nvar DEFAULT_TIMEOUT_MS = 5000;\nvar DEFAULT_MAX_SPAN_BATCH_SIZE = 100;\n\nvar HTTPSender = function () {\n  function HTTPSender() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, HTTPSender);\n\n    this._url = URL.parse(options.endpoint);\n    this._username = options.username;\n    this._password = options.password;\n    this._timeoutMs = options.timeoutMs || options.timeoutMS || DEFAULT_TIMEOUT_MS;\n    this._httpAgent = this._url.protocol === 'https:' ? new _https2.default.Agent({ keepAlive: true }) : new _http2.default.Agent({ keepAlive: true });\n\n    this._maxSpanBatchSize = options.maxSpanBatchSize || DEFAULT_MAX_SPAN_BATCH_SIZE;\n\n    this._logger = options.logger || new _logger2.default();\n    this._jaegerThrift = new _thriftrw.Thrift({\n      source: _thrift2.default.loadJaegerThriftDefinition(),\n      allowOptionalArguments: true\n    });\n\n    this._httpOptions = {\n      protocol: this._url.protocol,\n      hostname: this._url.hostname,\n      port: this._url.port,\n      path: this._url.pathname,\n      method: 'POST',\n      auth: this._username && this._password ? this._username + ':' + this._password : undefined,\n      headers: {\n        'Content-Type': 'application/x-thrift',\n        Connection: 'keep-alive'\n      },\n      agent: this._httpAgent,\n      timeout: this._timeoutMs\n    };\n  }\n\n  _createClass(HTTPSender, [{\n    key: 'setProcess',\n    value: function setProcess(process) {\n      // Go ahead and initialize the Thrift batch that we will reuse for each\n      // flush.\n      this._batch = new this._jaegerThrift.Batch({\n        process: _sender_utils2.default.convertProcessToThrift(this._jaegerThrift, process),\n        spans: []\n      });\n    }\n  }, {\n    key: 'append',\n    value: function append(span, callback) {\n      this._batch.spans.push(new this._jaegerThrift.Span(span));\n\n      if (this._batch.spans.length >= this._maxSpanBatchSize) {\n        this.flush(callback);\n        return;\n      }\n      _sender_utils2.default.invokeCallback(callback, 0);\n    }\n  }, {\n    key: 'flush',\n    value: function flush(callback) {\n      var _this = this;\n\n      var numSpans = this._batch.spans.length;\n      if (!numSpans) {\n        _sender_utils2.default.invokeCallback(callback, 0);\n        return;\n      }\n\n      var result = this._jaegerThrift.Batch.rw.toBuffer(this._batch);\n      this._reset(); // clear buffer for new spans, even if Thrift conversion fails\n\n      if (result.err) {\n        _sender_utils2.default.invokeCallback(callback, numSpans, 'Error encoding Thrift batch: ' + result.err);\n        return;\n      }\n\n      var requester = this._url.protocol === 'https:' ? _https2.default.request : _http2.default.request;\n\n      var req = requester(this._httpOptions, function (resp) {\n        // consume response data to free up memory\n        resp.resume();\n\n        var error = void 0;\n        if (resp.statusCode >= 400) {\n          error = 'error sending spans over HTTP: server responded with HTTP ' + resp.statusCode;\n          _this._logger.error(error);\n        }\n\n        _sender_utils2.default.invokeCallback(callback, numSpans, error);\n      });\n\n      req.on('error', function (err) {\n        var error = 'error sending spans over HTTP: ' + err;\n        _this._logger.error(error);\n        _sender_utils2.default.invokeCallback(callback, numSpans, error);\n      });\n      req.write(result.value);\n      req.end();\n    }\n  }, {\n    key: '_reset',\n    value: function _reset() {\n      this._batch.spans = [];\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      // Older node versions don't have this.\n      if (this._httpAgent.destroy) {\n        this._httpAgent.destroy();\n      }\n    }\n  }]);\n\n  return HTTPSender;\n}();\n\nexports[\"default\"] = HTTPSender;\n//# sourceMappingURL=http_sender.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/jaeger-client/dist/src/reporters/http_sender.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/jaeger-client/dist/src/reporters/sender_utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/jaeger-client/dist/src/reporters/sender_utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar _thriftrw = __webpack_require__(/*! thriftrw */ \"(action-browser)/./node_modules/thriftrw/index.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SenderUtils = function () {\n  function SenderUtils() {\n    _classCallCheck(this, SenderUtils);\n  }\n\n  _createClass(SenderUtils, null, [{\n    key: 'invokeCallback',\n    value: function invokeCallback(callback, numSpans, error) {\n      if (callback) {\n        callback(numSpans, error);\n      }\n    }\n  }, {\n    key: 'convertProcessToThrift',\n    value: function convertProcessToThrift(t, process) {\n      var tagMessages = [];\n      for (var j = 0; j < process.tags.length; j++) {\n        var tag = process.tags[j];\n        tagMessages.push(new t.Tag(tag));\n      }\n\n      return new t.Process({\n        serviceName: process.serviceName,\n        tags: tagMessages\n      });\n    }\n  }]);\n\n  return SenderUtils;\n}();\n\nexports[\"default\"] = SenderUtils;\n//# sourceMappingURL=sender_utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qYWVnZXItY2xpZW50L2Rpc3Qvc3JjL3JlcG9ydGVycy9zZW5kZXJfdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDOztBQUVGLGlDQUFpQywyQ0FBMkMsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RCwrREFBK0QseURBQXlELHFFQUFxRSw2REFBNkQsd0JBQXdCO0FBQ2pqQjtBQUNBO0FBQ0EsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCLG1CQUFPLENBQUMsbUVBQVU7O0FBRWxDLGtEQUFrRCwwQ0FBMEM7O0FBRTVGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5QkFBeUI7QUFDL0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVELGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIkM6XFxyZXBvXFxOdXRyaVdpc2VBSVxcbm9kZV9tb2R1bGVzXFxqYWVnZXItY2xpZW50XFxkaXN0XFxzcmNcXHJlcG9ydGVyc1xcc2VuZGVyX3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcbi8vIENvcHlyaWdodCAoYykgMjAxOCBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0XG4vLyBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2Vcbi8vIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzXG4vLyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyXG4vLyB0aGUgTGljZW5zZS5cblxudmFyIF90aHJpZnRydyA9IHJlcXVpcmUoJ3RocmlmdHJ3Jyk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBTZW5kZXJVdGlscyA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU2VuZGVyVXRpbHMoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNlbmRlclV0aWxzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTZW5kZXJVdGlscywgbnVsbCwgW3tcbiAgICBrZXk6ICdpbnZva2VDYWxsYmFjaycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGludm9rZUNhbGxiYWNrKGNhbGxiYWNrLCBudW1TcGFucywgZXJyb3IpIHtcbiAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayhudW1TcGFucywgZXJyb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NvbnZlcnRQcm9jZXNzVG9UaHJpZnQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb252ZXJ0UHJvY2Vzc1RvVGhyaWZ0KHQsIHByb2Nlc3MpIHtcbiAgICAgIHZhciB0YWdNZXNzYWdlcyA9IFtdO1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBwcm9jZXNzLnRhZ3MubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgdmFyIHRhZyA9IHByb2Nlc3MudGFnc1tqXTtcbiAgICAgICAgdGFnTWVzc2FnZXMucHVzaChuZXcgdC5UYWcodGFnKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBuZXcgdC5Qcm9jZXNzKHtcbiAgICAgICAgc2VydmljZU5hbWU6IHByb2Nlc3Muc2VydmljZU5hbWUsXG4gICAgICAgIHRhZ3M6IHRhZ01lc3NhZ2VzXG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2VuZGVyVXRpbHM7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFNlbmRlclV0aWxzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VuZGVyX3V0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/jaeger-client/dist/src/reporters/sender_utils.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/jaeger-client/dist/src/reporters/udp_sender.js":
/*!*********************************************************************!*\
  !*** ./node_modules/jaeger-client/dist/src/reporters/udp_sender.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar _dgram = __webpack_require__(/*! dgram */ \"dgram\");\n\nvar _dgram2 = _interopRequireDefault(_dgram);\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = __webpack_require__(/*! path */ \"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _thriftrw = __webpack_require__(/*! thriftrw */ \"(action-browser)/./node_modules/thriftrw/index.js\");\n\nvar _logger = __webpack_require__(/*! ../logger */ \"(action-browser)/./node_modules/jaeger-client/dist/src/logger.js\");\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _sender_utils = __webpack_require__(/*! ./sender_utils */ \"(action-browser)/./node_modules/jaeger-client/dist/src/reporters/sender_utils.js\");\n\nvar _sender_utils2 = _interopRequireDefault(_sender_utils);\n\nvar _thrift = __webpack_require__(/*! ../thrift */ \"(action-browser)/./node_modules/jaeger-client/dist/src/thrift.js\");\n\nvar _thrift2 = _interopRequireDefault(_thrift);\n\nvar _util = __webpack_require__(/*! ../util */ \"(action-browser)/./node_modules/jaeger-client/dist/src/util.js\");\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar HOST = 'localhost';\nvar PORT = 6832;\nvar SOCKET_TYPE = 'udp4';\nvar UDP_PACKET_MAX_LENGTH = 65000;\n\nvar UDPSender = function () {\n  // size of currently batched spans as Thrift bytes\n\n  function UDPSender() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, UDPSender);\n\n    this._host = options.host || HOST;\n    this._port = options.port || PORT;\n    this._socketType = options.socketType || SOCKET_TYPE;\n    this._maxPacketSize = options.maxPacketSize || UDP_PACKET_MAX_LENGTH;\n    this._logger = options.logger || new _logger2.default();\n    this._client = _dgram2.default.createSocket(this._socketType);\n    this._client.on('error', function (err) {\n      _this._logger.error('error sending spans over UDP: ' + err);\n    });\n    this._agentThrift = new _thriftrw.Thrift({\n      entryPoint: _thrift2.default.buildAgentThriftPath(),\n      allowOptionalArguments: true,\n      allowFilesystemAccess: true\n    });\n    this._jaegerThrift = new _thriftrw.Thrift({\n      source: _thrift2.default.loadJaegerThriftDefinition(),\n      allowOptionalArguments: true\n    });\n    this._totalSpanBytes = 0;\n  } // maxPacketSize - (batch + tags overhead)\n\n\n  _createClass(UDPSender, [{\n    key: '_calcBatchSize',\n    value: function _calcBatchSize(batch) {\n      return this._agentThrift.Agent.emitBatch.argumentsMessageRW.byteLength(this._convertBatchToThriftMessage()).length;\n    }\n  }, {\n    key: '_calcSpanSize',\n    value: function _calcSpanSize(span) {\n      return this._jaegerThrift.Span.rw.byteLength(new this._jaegerThrift.Span(span));\n    }\n  }, {\n    key: 'setProcess',\n    value: function setProcess(process) {\n      // This function is only called once during reporter construction, and thus will\n      // give us the length of the batch before any spans have been added to the span\n      // list in batch.\n      this._process = process;\n      this._batch = {\n        process: this._process,\n        spans: []\n      };\n\n      this._thriftProcessMessage = _sender_utils2.default.convertProcessToThrift(this._jaegerThrift, process);\n      this._emitSpanBatchOverhead = this._calcBatchSize(this._batch);\n      this._maxSpanBytes = this._maxPacketSize - this._emitSpanBatchOverhead;\n    }\n  }, {\n    key: 'append',\n    value: function append(span, callback) {\n      var _this2 = this;\n\n      var _calcSpanSize2 = this._calcSpanSize(span),\n          err = _calcSpanSize2.err,\n          length = _calcSpanSize2.length;\n\n      if (err) {\n        _sender_utils2.default.invokeCallback(callback, 1, 'error converting span to Thrift: ' + err);\n        return;\n      }\n      var spanSize = length;\n      if (spanSize > this._maxSpanBytes) {\n        _sender_utils2.default.invokeCallback(callback, 1, 'span size ' + spanSize + ' is larger than maxSpanSize ' + this._maxSpanBytes);\n        return;\n      }\n\n      if (this._totalSpanBytes + spanSize <= this._maxSpanBytes) {\n        this._batch.spans.push(span);\n        this._totalSpanBytes += spanSize;\n        if (this._totalSpanBytes < this._maxSpanBytes) {\n          // still have space in the buffer, don't flush it yet\n          _sender_utils2.default.invokeCallback(callback, 0);\n          return;\n        }\n        // buffer size === this._maxSpanBytes\n        this.flush(callback);\n        return;\n      }\n\n      this.flush(function (numSpans, err) {\n        // TODO theoretically we can have buffer overflow here too, if many spans were appended during flush()\n        _this2._batch.spans.push(span);\n        _this2._totalSpanBytes += spanSize;\n        _sender_utils2.default.invokeCallback(callback, numSpans, err);\n      });\n    }\n  }, {\n    key: 'flush',\n    value: function flush(callback) {\n      var numSpans = this._batch.spans.length;\n      if (!numSpans) {\n        _sender_utils2.default.invokeCallback(callback, 0);\n        return;\n      }\n\n      var bufferLen = this._totalSpanBytes + this._emitSpanBatchOverhead;\n      var thriftBuffer = _util2.default.newBuffer(bufferLen);\n      var writeResult = this._agentThrift.Agent.emitBatch.argumentsMessageRW.writeInto(this._convertBatchToThriftMessage(), thriftBuffer, 0);\n      this._reset();\n\n      if (writeResult.err) {\n        _sender_utils2.default.invokeCallback(callback, numSpans, 'error writing Thrift object: ' + writeResult.err);\n        return;\n      }\n\n      // Having the error callback here does not prevent uncaught exception from being thrown,\n      // that's why in the constructor we also add a general on('error') handler.\n      this._client.send(thriftBuffer, 0, thriftBuffer.length, this._port, this._host, function (err, sent) {\n        if (err) {\n          var error = err && 'error sending spans over UDP: ' + err + ', packet size: ' + writeResult.offset + ', bytes sent: ' + sent;\n          _sender_utils2.default.invokeCallback(callback, numSpans, error);\n        } else {\n          _sender_utils2.default.invokeCallback(callback, numSpans);\n        }\n      });\n    }\n  }, {\n    key: '_convertBatchToThriftMessage',\n    value: function _convertBatchToThriftMessage() {\n      var spanMessages = [];\n      for (var i = 0; i < this._batch.spans.length; i++) {\n        var span = this._batch.spans[i];\n        spanMessages.push(new this._jaegerThrift.Span(span));\n      }\n\n      return new this._agentThrift.Agent.emitBatch.ArgumentsMessage({\n        version: 1,\n        id: 0,\n        body: {\n          batch: new this._jaegerThrift.Batch({\n            process: this._thriftProcessMessage,\n            spans: spanMessages\n          })\n        }\n      });\n    }\n  }, {\n    key: '_reset',\n    value: function _reset() {\n      this._batch.spans = [];\n      this._totalSpanBytes = 0;\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      this._client.close();\n    }\n  }]);\n\n  return UDPSender;\n}();\n\nexports[\"default\"] = UDPSender;\n//# sourceMappingURL=udp_sender.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/jaeger-client/dist/src/reporters/udp_sender.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/jaeger-client/dist/src/thrift.js":
/*!*******************************************************!*\
  !*** ./node_modules/jaeger-client/dist/src/thrift.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar _fs = __webpack_require__(/*! fs */ \"fs\");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _opentracing = __webpack_require__(/*! opentracing */ \"(action-browser)/./node_modules/opentracing/lib/index.js\");\n\nvar opentracing = _interopRequireWildcard(_opentracing);\n\nvar _path = __webpack_require__(/*! path */ \"path\");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _thriftrw = __webpack_require__(/*! thriftrw */ \"(action-browser)/./node_modules/thriftrw/index.js\");\n\nvar _util = __webpack_require__(/*! ./util.js */ \"(action-browser)/./node_modules/jaeger-client/dist/src/util.js\");\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ThriftUtils = function () {\n  function ThriftUtils() {\n    _classCallCheck(this, ThriftUtils);\n  }\n\n  _createClass(ThriftUtils, null, [{\n    key: 'loadJaegerThriftDefinition',\n    value: function loadJaegerThriftDefinition() {\n      return _fs2.default.readFileSync(_path2.default.join(__dirname, './jaeger-idl/thrift/jaeger.thrift'), 'ascii');\n    }\n  }, {\n    key: 'buildAgentThriftPath',\n    value: function buildAgentThriftPath() {\n      return _path2.default.join(__dirname, './thriftrw-idl/agent.thrift');\n    }\n  }, {\n    key: 'getThriftTags',\n    value: function getThriftTags(initialTags) {\n      var thriftTags = [];\n      for (var i = 0; i < initialTags.length; i++) {\n        var tag = initialTags[i];\n\n        var key = tag.key;\n\n        var vLong = ThriftUtils.emptyBuffer;\n        var vBinary = ThriftUtils.emptyBuffer;\n        var vBool = false;\n        var vDouble = 0;\n        var vStr = '';\n\n        var vType = '';\n        var valueType = _typeof(tag.value);\n        if (valueType === 'number') {\n          vType = ThriftUtils._thrift.TagType.DOUBLE;\n          vDouble = tag.value;\n        } else if (valueType === 'boolean') {\n          vType = ThriftUtils._thrift.TagType.BOOL;\n          vBool = tag.value;\n        } else if (tag.value instanceof Buffer) {\n          vType = ThriftUtils._thrift.TagType.BINARY;\n          vBinary = tag.value;\n        } else if (valueType === 'object') {\n          vType = ThriftUtils._thrift.TagType.STRING;\n          vStr = JSON.stringify(tag.value);\n        } else {\n          vType = ThriftUtils._thrift.TagType.STRING;\n          if (valueType === 'string') {\n            vStr = tag.value;\n          } else {\n            vStr = String(tag.value);\n          }\n        }\n\n        thriftTags.push({\n          key: key,\n          vType: vType,\n          vStr: vStr,\n          vDouble: vDouble,\n          vBool: vBool,\n          vLong: vLong,\n          vBinary: vBinary\n        });\n      }\n\n      return thriftTags;\n    }\n  }, {\n    key: 'getThriftLogs',\n    value: function getThriftLogs(logs) {\n      var thriftLogs = [];\n      for (var i = 0; i < logs.length; i++) {\n        var log = logs[i];\n        thriftLogs.push({\n          timestamp: _util2.default.encodeInt64(log.timestamp * 1000), // to microseconds\n          fields: ThriftUtils.getThriftTags(log.fields)\n        });\n      }\n\n      return thriftLogs;\n    }\n  }, {\n    key: 'spanRefsToThriftRefs',\n    value: function spanRefsToThriftRefs(refs) {\n      var thriftRefs = [];\n      for (var i = 0; i < refs.length; i++) {\n        var refEnum = void 0;\n        var ref = refs[i];\n        var context = refs[i].referencedContext();\n\n        if (ref.type() === opentracing.REFERENCE_CHILD_OF) {\n          refEnum = ThriftUtils._thrift.SpanRefType.CHILD_OF;\n        } else if (ref.type() === opentracing.REFERENCE_FOLLOWS_FROM) {\n          refEnum = ThriftUtils._thrift.SpanRefType.FOLLOWS_FROM;\n        } else {\n          continue;\n        }\n\n        thriftRefs.push({\n          refType: refEnum,\n          traceIdLow: ThriftUtils.getTraceIdLow(context.traceId),\n          traceIdHigh: ThriftUtils.getTraceIdHigh(context.traceId),\n          spanId: context.spanId\n        });\n      }\n\n      return thriftRefs;\n    }\n  }, {\n    key: 'getTraceIdLow',\n    value: function getTraceIdLow(traceId) {\n      if (traceId != null) {\n        return traceId.slice(-8);\n      }\n\n      return ThriftUtils.emptyBuffer;\n    }\n  }, {\n    key: 'getTraceIdHigh',\n    value: function getTraceIdHigh(traceId) {\n      if (traceId != null && traceId.length > 8) {\n        return traceId.slice(-16, -8);\n      }\n\n      return ThriftUtils.emptyBuffer;\n    }\n  }, {\n    key: 'spanToThrift',\n    value: function spanToThrift(span) {\n      var tags = ThriftUtils.getThriftTags(span._tags);\n      var logs = ThriftUtils.getThriftLogs(span._logs);\n      var unsigned = true;\n\n      return {\n        traceIdLow: ThriftUtils.getTraceIdLow(span._spanContext.traceId),\n        traceIdHigh: ThriftUtils.getTraceIdHigh(span._spanContext.traceId),\n        spanId: span._spanContext.spanId,\n        parentSpanId: span._spanContext.parentId || ThriftUtils.emptyBuffer,\n        operationName: span._operationName,\n        references: ThriftUtils.spanRefsToThriftRefs(span._references),\n        flags: span._spanContext.flags,\n        startTime: _util2.default.encodeInt64(span._startTime * 1000), // to microseconds\n        duration: _util2.default.encodeInt64(span._duration * 1000), // to microseconds\n        tags: tags,\n        logs: logs\n      };\n    }\n  }]);\n\n  return ThriftUtils;\n}();\n\nThriftUtils._thrift = new _thriftrw.Thrift({\n  source: ThriftUtils.loadJaegerThriftDefinition(),\n  allowOptionalArguments: true\n});\nThriftUtils.emptyBuffer = _util2.default.newBuffer(8);\nexports[\"default\"] = ThriftUtils;\n//# sourceMappingURL=thrift.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/jaeger-client/dist/src/thrift.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/jaeger-client/dist/src/util.js":
/*!*****************************************************!*\
  !*** ./node_modules/jaeger-client/dist/src/util.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar _xorshift = __webpack_require__(/*! xorshift */ \"(action-browser)/./node_modules/xorshift/xorshift.js\");\n\nvar _xorshift2 = _interopRequireDefault(_xorshift);\n\nvar _nodeInt = __webpack_require__(/*! node-int64 */ \"(action-browser)/./node_modules/node-int64/Int64.js\");\n\nvar _nodeInt2 = _interopRequireDefault(_nodeInt);\n\nvar _os = __webpack_require__(/*! os */ \"os\");\n\nvar _os2 = _interopRequireDefault(_os);\n\nvar _http = __webpack_require__(/*! http */ \"http\");\n\nvar _http2 = _interopRequireDefault(_http);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: 'startsWith',\n\n    /**\n     * Determines whether a string contains a given prefix.\n     *\n     * @param {string} text - the string for to search for a prefix\n     * @param {string} prefix - the prefix to search for in the text given.\n     * @return {boolean} - boolean representing whether or not the\n     * string contains the prefix.\n     **/\n    value: function startsWith(text, prefix) {\n      return text.indexOf(prefix) === 0;\n    }\n\n    /**\n     * Determines whether a string contains a given suffix.\n     *\n     * @param {string} text - the string for to search for a suffix\n     * @param {string} suffix - the suffix to search for in the text given.\n     * @return {boolean} - boolean representing whether or not the\n     * string contains the suffix.\n     **/\n\n  }, {\n    key: 'endsWith',\n    value: function endsWith(text, suffix) {\n      return text.lastIndexOf(suffix) === text.length - suffix.length;\n    }\n\n    /**\n     * Get a random buffer representing a random 64 bit.\n     *\n     * @return {Buffer}  - returns a buffer representing a random 64 bit\n     * number.\n     **/\n\n  }, {\n    key: 'getRandom64',\n    value: function getRandom64() {\n      var randint = _xorshift2.default.randomint();\n      var buf = this.newBuffer(8);\n      buf.writeUInt32BE(randint[0], 0);\n      buf.writeUInt32BE(randint[1], 4);\n      return buf;\n    }\n\n    /**\n     * Get a random buffer representing a random 128 bit.\n     *\n     * @return {Buffer}  - returns a buffer representing a random 128 bit\n     * number.\n     **/\n\n  }, {\n    key: 'getRandom128',\n    value: function getRandom128() {\n      var randint1 = _xorshift2.default.randomint();\n      var randint2 = _xorshift2.default.randomint();\n      var buf = this.newBuffer(16);\n      buf.writeUInt32BE(randint1[0], 0);\n      buf.writeUInt32BE(randint1[1], 4);\n      buf.writeUInt32BE(randint2[0], 8);\n      buf.writeUInt32BE(randint2[1], 12);\n      return buf;\n    }\n\n    /**\n     * @param {string|number} numberValue - a string or number to be encoded\n     * as a 64 bit byte array.\n     * @return {Buffer} - returns a buffer representing the encoded string, or number.\n     **/\n\n  }, {\n    key: 'encodeInt64',\n    value: function encodeInt64(numberValue) {\n      return new _nodeInt2.default(numberValue).toBuffer();\n    }\n\n    /**\n     * @param {string} input - the input for which leading zeros should be removed.\n     * @return {string} - returns the input string without leading zeros.\n     **/\n\n  }, {\n    key: 'removeLeadingZeros',\n    value: function removeLeadingZeros(input) {\n      var counter = 0;\n      var length = input.length - 1;\n      for (var i = 0; i < length; i++) {\n        if (input.charAt(i) === '0') {\n          counter++;\n        } else {\n          break;\n        }\n      }\n\n      return input.substring(counter);\n    }\n  }, {\n    key: 'myIp',\n    value: function myIp() {\n      var myIp = '0.0.0.0';\n      var ifaces = _os2.default.networkInterfaces();\n      var keys = Object.keys(ifaces);\n      loop1: for (var i = 0; i < keys.length; i++) {\n        var iface = ifaces[keys[i]];\n        for (var j = 0; j < iface.length; j++) {\n          if (iface[j].family === 'IPv4' && !iface[j].internal) {\n            myIp = iface[j].address;\n            break loop1;\n          }\n        }\n      }\n      return myIp;\n    }\n  }, {\n    key: 'clone',\n    value: function clone(obj) {\n      var newObj = {};\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          newObj[key] = obj[key];\n        }\n      }\n\n      return newObj;\n    }\n  }, {\n    key: 'convertObjectToTags',\n    value: function convertObjectToTags(dict) {\n      var tags = [];\n      for (var key in dict) {\n        var value = dict[key];\n        if (Object.prototype.hasOwnProperty.call(dict, key)) {\n          tags.push({ key: key, value: value });\n        }\n      }\n\n      return tags;\n    }\n  }, {\n    key: 'httpGet',\n    value: function httpGet(host, port, path, success, error) {\n      _http2.default.get({\n        host: host,\n        port: port,\n        path: path\n      }, function (res) {\n        // explicitly treat incoming data as utf8 (avoids issues with multi-byte chars)\n        res.setEncoding('utf8');\n\n        // incrementally capture the incoming response body\n        var body = '';\n        res.on('data', function (chunk) {\n          body += chunk;\n        });\n\n        res.on('end', function () {\n          success(body);\n        });\n      }).on('error', function (err) {\n        error(err);\n      });\n    }\n\n    /**\n     * @param {string|number} input - a hex encoded string to store in the buffer.\n     * @return {Buffer} - returns a buffer representing the hex encoded string.\n     **/\n\n  }, {\n    key: 'newBufferFromHex',\n    value: function newBufferFromHex(input) {\n      var encoding = 'hex';\n      // check that 'Buffer.from' exists based on node's documentation\n      // https://nodejs.org/en/docs/guides/buffer-constructor-deprecation/#variant-3\n      if (Buffer.from && Buffer.from !== Uint8Array.from) {\n        return Buffer.from(input, encoding);\n      }\n      return new Buffer(input, encoding);\n    }\n\n    /**\n     * @param {number} input - a number of octets to allocate.\n     * @return {Buffer} - returns an empty buffer.\n     **/\n\n  }, {\n    key: 'newBuffer',\n    value: function newBuffer(size) {\n      if (Buffer.alloc) {\n        return Buffer.alloc(size);\n      }\n      var buffer = new Buffer(size);\n      buffer.fill(0);\n      return buffer;\n    }\n\n    /**\n     * Creates a callback function that only delegates to passed <code>callback</code>\n     * after <code>limit</code> invocations. Useful in types like CompositeReporter that\n     * needs to invoke the top level callback only after all delegates' close() methods\n     * are called.\n     */\n\n  }, {\n    key: 'countdownCallback',\n    value: function countdownCallback(limit, callback) {\n      var count = 0;\n      return function () {\n        count++;\n        if (count >= limit && callback) {\n          callback();\n        }\n      };\n    }\n  }]);\n\n  return Utils;\n}();\n\nexports[\"default\"] = Utils;\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/jaeger-client/dist/src/util.js\n");

/***/ })

};
;